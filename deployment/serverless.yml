service: ${env:SvcName}

provider:
  name: aws
  runtime: nodejs10.x
  region: ${env:AwsRegion}
  stage: ${env:AwsStage}
  profile: ${env:SvcName}-${env:AwsStage}
  memorySize: 1024
  timeout: 900
  role: "arn:aws:iam::547758924192:role/stat-updater-lambda-role"
  vpc:
      securityGroupIds:
      - "sg-0a97fbfa3e8ac6431"
      subnetIds:
      - "subnet-07aaf2d2cb7a289b3"
      - "subnet-0823c9858aac44f9d"
      - "subnet-0fe45c6df48d432f8"
      - "subnet-0125c5ee10694c1cb"
      - "subnet-0a4df6febf1094084"
      - "subnet-0b4e6c85c4abfc77d"
  environment:
    ENVIRONMENT: ${env:AwsStage}
    REGION: ${env:REGION}
    HOST: ${env:HOST}
    USERNAME: ${env:USERNAME}
    PEM_KEY: ${env:PEM_KEY}
    S3_BUCKET: ${env:S3_BUCKET}
    UTILITIES_URL: ${env:UTILITIES_URL}


functions:
  app:
    handler: app/handler.handler
    events:
      - schedule: cron(0 03 * * ? *)


resources:
  Resources:
    LogErrorCloudwatchMetricFilter:
      Type: "AWS::Logs::MetricFilter"
      DependsOn:
        - AppLambdaFunction
      Properties:
        LogGroupName: 'OpasDataUpdateStat_${env:SvcName}-${env:AwsStage}'
        FilterPattern: "?RROR ?rror ?xception"
        MetricTransformations:
          - MetricValue: "1"
            MetricNamespace: "OpasDataUpdateStat-error-metric"
            MetricName: "${env:AwsStage}-error-count"

    LogErrorCloudWatchAlarm:
      Type: "AWS::CloudWatch::Alarm"
      DependsOn: LogErrorCloudwatchMetricFilter
      Properties:
        AlarmDescription: "OpasDataUpdateStat has encountered errors"
        MetricName: "${env:AwsStage}-error-count"
        Namespace: "OpasDataUpdateStat-error-metric"
        Statistic: "Sum"
        Period: "60"
        EvaluationPeriods: "1"
        Threshold: "1"
        ComparisonOperator: "GreaterThanOrEqualToThreshold"
        TreatMissingData: "notBreaching"
        AlarmActions:
          - ${env:ALARM_TOPIC}
